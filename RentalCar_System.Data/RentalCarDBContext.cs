// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using RentalCar_System.Models.Entity;
namespace RentalCar_System.Data;

public partial class RentalCarDBContext : DbContext
{
    
    public RentalCarDBContext(DbContextOptions<RentalCarDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Car> Cars { get; set; }

    public virtual DbSet<Image> Images { get; set; }

    public virtual DbSet<RentalContract> RentalContracts { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Car>(entity =>
        {
            entity.HasKey(e => e.CarId).HasName("PK__Cars__68A0342E255B3D38");

            entity.HasIndex(e => e.LicensePlate, "UQ__Cars__026BC15C26C93DB3").IsUnique();

            entity.Property(e => e.CarId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Brand).HasMaxLength(50);
            entity.Property(e => e.Color).HasMaxLength(20);
            entity.Property(e => e.LicensePlate)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.MadeIn).HasMaxLength(50);
            entity.Property(e => e.Mileage).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Model).HasMaxLength(50);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.Price).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(20)
                .HasDefaultValue("Available");
        });

        modelBuilder.Entity<Image>(entity =>
        {
            entity.HasKey(e => e.ImgId).HasName("PK__Images__352F54F382964167");

            entity.Property(e => e.ImgId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Image1).HasColumnName("Image");

            entity.HasOne(d => d.Cars).WithMany(p => p.Images)
                .HasForeignKey(d => d.CarsId)
                .HasConstraintName("FK__Images__CarsId__4316F928");
        });

        modelBuilder.Entity<RentalContract>(entity =>
        {
            entity.HasKey(e => e.ContractId).HasName("PK__RentalCo__C90D346917ABCCE0");

            entity.Property(e => e.ContractId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.RentalDate).HasColumnType("datetime");
            entity.Property(e => e.ReturnDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.TotalAmount).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Car).WithMany(p => p.RentalContracts)
                .HasForeignKey(d => d.CarId)
                .HasConstraintName("FK__RentalCon__CarId__47DBAE45");

            entity.HasOne(d => d.User).WithMany(p => p.RentalContracts)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__RentalCon__UserI__46E78A0C");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CC4C911BC169");

            entity.HasIndex(e => e.PhoneNumber, "UQ__Users__85FB4E387DA64C92").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Users__A9D10534869B6CAE").IsUnique();

            entity.Property(e => e.UserId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Role)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(10);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}