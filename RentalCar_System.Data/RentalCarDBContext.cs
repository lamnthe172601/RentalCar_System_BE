// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using RentalCar_System.Models.Entity;

namespace RentalCar_System.Data;

public partial class RentalCarDBContext : DbContext
{
    public RentalCarDBContext(DbContextOptions<RentalCarDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Car> Cars { get; set; }

    public virtual DbSet<CarAddress> CarAddresses { get; set; }

    public virtual DbSet<RentalContract> RentalContracts { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Car>(entity =>
        {
            entity.HasKey(e => e.CarId).HasName("PK__Cars__68A0342E3BF28D80");

            entity.HasIndex(e => e.LicensePlate, "UQ__Cars__026BC15C451960BD").IsUnique();

            entity.Property(e => e.CarId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Brand).HasMaxLength(50);
            entity.Property(e => e.Color).HasMaxLength(20);
            entity.Property(e => e.LicensePlate)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.Mileage).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Model).HasMaxLength(50);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.Price).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(20)
                .HasDefaultValue("Available");

            entity.HasOne(d => d.User).WithMany(p => p.Cars)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Cars__UserId__412EB0B6");
        });

        modelBuilder.Entity<CarAddress>(entity =>
        {
            entity.HasKey(e => e.AddressId).HasName("PK__CarAddre__091C2AFBA3F9E618");

            entity.ToTable("CarAddress");

            entity.Property(e => e.AddressId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.City).HasMaxLength(100);
            entity.Property(e => e.District).HasMaxLength(100);
            entity.Property(e => e.Street).HasMaxLength(255);
            entity.Property(e => e.Ward).HasMaxLength(100);

            entity.HasOne(d => d.Car).WithMany(p => p.CarAddresses)
                .HasForeignKey(d => d.CarId)
                .HasConstraintName("FK__CarAddres__CarId__4BAC3F29");
        });

        modelBuilder.Entity<RentalContract>(entity =>
        {
            entity.HasKey(e => e.ContractId).HasName("PK__RentalCo__C90D3469C063D4D1");

            entity.Property(e => e.ContractId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.RentalDate).HasColumnType("datetime");
            entity.Property(e => e.ReturnDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.TotalAmount).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Car).WithMany(p => p.RentalContracts)
                .HasForeignKey(d => d.CarId)
                .HasConstraintName("FK__RentalCon__CarId__46E78A0C");

            entity.HasOne(d => d.User).WithMany(p => p.RentalContracts)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__RentalCon__UserI__45F365D3");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CC4CACFCEA6B");

            entity.HasIndex(e => e.Username, "UQ__Users__536C85E466C5F9BF").IsUnique();

            entity.HasIndex(e => e.PhoneNumber, "UQ__Users__85FB4E38124E5DFF").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Users__A9D1053436C9ED61").IsUnique();

            entity.Property(e => e.UserId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Role)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }


    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}